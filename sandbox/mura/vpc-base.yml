AWSTemplateFormatVersion: 2010-09-09
Outputs:
  CommonSecurityGroup:
    Value:
      Ref: CommonSecurityGroup
  DbSubnetGroup:
    Value:
      Ref: DbSubnetGroup
  Private1Subnet:
    Value:
      Ref: Private1Subnet
  Private2Subnet:
    Value:
      Ref: Private2Subnet
  PrivateRouteTable:
    Value:
      Ref: PrivateRouteTable
  Public1Subnet:
    Value:
      Ref: Public1Subnet
  Public2Subnet:
    Value:
      Ref: Public2Subnet
  Vpc:
    Value:
      Ref: Vpc
Parameters:
  Private1SubnetCidrBlock:
    Default: 10.0.128.0/18
    Type: String
  Private2SubnetCidrBlock:
    Default: 10.0.192.0/18
    Type: String
  ProjectName:
    Default: cloudpack
    Type: String
  Public1SubnetCidrBlock:
    Default: 10.0.0.0/18
    Type: String
  Public2SubnetCidrBlock:
    Default: 10.0.64.0/18
    Type: String
  VpcCidrBlock:
    Default: 10.0.0.0/16
    Type: String
Resources:
  AttachGateway:
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::VPCGatewayAttachment
  CommonSecurityGroup:
    Properties:
      GroupDescription: Common
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - common
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::SecurityGroup
  CommonSecurityGroupIngress:
    Properties:
      GroupId:
        Ref: CommonSecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: CommonSecurityGroup
    Type: AWS::EC2::SecurityGroupIngress
  DbSubnetGroup:
    Properties:
      DBSubnetGroupDescription:
        Ref: ProjectName
      SubnetIds:
      - Ref: Private1Subnet
      - Ref: Private2Subnet
    Type: AWS::RDS::DBSubnetGroup
  InternetGateway:
    Properties:
      Tags:
      - Key: Name
        Value:
          Ref: ProjectName
    Type: AWS::EC2::InternetGateway
  InternetRoute:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  Private1Subnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - "0"
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Private1SubnetCidrBlock
      MapPublicIpOnLaunch: "false"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - private
            - "1"
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::Subnet
  Private1SubnetRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: Private1Subnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  Private2Subnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - "1"
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Private2SubnetCidrBlock
      MapPublicIpOnLaunch: "false"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - private
            - "2"
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::Subnet
  Private2SubnetRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: Private2Subnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  PrivateRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - private
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::RouteTable
  Public1Subnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - "0"
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Public1SubnetCidrBlock
      MapPublicIpOnLaunch: "true"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - public
            - "1"
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::Subnet
  Public1SubnetRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: Public1Subnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  Public2Subnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - "1"
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Public2SubnetCidrBlock
      MapPublicIpOnLaunch: "true"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - public
            - "2"
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::Subnet
  Public2SubnetRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: Public2Subnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - public
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::RouteTable
  Vpc:
    Properties:
      CidrBlock:
        Ref: VpcCidrBlock
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          Ref: ProjectName
    Type: AWS::EC2::VPC
  VpcEndpoint:
    Properties:
      PolicyDocument:
        Statement:
        - Action: '*'
          Effect: Allow
          Principal: '*'
          Resource: '*'
        Version: 2012-10-17
      RouteTableIds:
      - Ref: PublicRouteTable
      - Ref: PrivateRouteTable
      ServiceName:
        Fn::Join:
        - .
        - - com.amazonaws
          - Ref: AWS::Region
          - s3
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::VPCEndpoint
